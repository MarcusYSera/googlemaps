{"ast":null,"code":"var _jsxFileName = \"/Users/Jeff/googlemaps/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport isEmpty from 'lodash.isempty'; // components:\n\nimport Marker from './Marker'; // examples:\n\nimport GoogleMap from './GoogleMap';\nimport SearchBox from './SearchBox';\nexport default class Searchbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      places: [],\n      center: [35.6762, 139.6503]\n    };\n\n    this.apiHasLoaded = (map, maps) => {\n      this.setState({\n        mapApiLoaded: true,\n        mapInstance: map,\n        mapApi: maps\n      });\n    };\n\n    this.addPlace = place => {\n      this.setState({\n        places: place\n      });\n    };\n  }\n\n  render() {\n    const {\n      places,\n      mapApiLoaded,\n      mapInstance,\n      mapApi,\n      center\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, mapApiLoaded && /*#__PURE__*/React.createElement(SearchBox, {\n      map: mapInstance,\n      mapApi: mapApi,\n      addplace: this.addPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '500px',\n        width: '500px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: center,\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_API,\n        libraries: ['places', 'geometry']\n      },\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: ({\n        map,\n        maps\n      }) => this.apiHasLoaded(map, maps),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, !isEmpty(places) && places.map(place => /*#__PURE__*/React.createElement(Marker, {\n      key: place.id,\n      text: place.name,\n      lat: place.geometry.location.lat(),\n      lng: place.geometry.location.lng(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Jeff/googlemaps/src/components/SearchBar.js"],"names":["React","Component","isEmpty","Marker","GoogleMap","SearchBox","Searchbar","state","mapApiLoaded","mapInstance","mapApi","places","center","apiHasLoaded","map","maps","setState","addPlace","place","render","height","width","key","process","env","REACT_APP_GOOGLE_API","libraries","id","name","geometry","location","lat","lng"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAI/CM,KAJ+C,GAIvC;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,WAAW,EAAE,IAFP;AAGNC,MAAAA,MAAM,EAAE,IAHF;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV;AALF,KAJuC;;AAAA,SAa/CC,YAb+C,GAahC,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5B,WAAKC,QAAL,CAAc;AACZR,QAAAA,YAAY,EAAE,IADF;AAEZC,QAAAA,WAAW,EAAEK,GAFD;AAGZJ,QAAAA,MAAM,EAAEK;AAHI,OAAd;AAKD,KAnB8C;;AAAA,SAqB/CE,QArB+C,GAqBnCC,KAAD,IAAW;AACpB,WAAKF,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEO;AAAV,OAAd;AACD,KAvB8C;AAAA;;AAyB/CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,MAAF;AAAUH,MAAAA,YAAV;AAAwBC,MAAAA,WAAxB;AAAqCC,MAAAA,MAArC;AAA6CE,MAAAA;AAA7C,QAAwD,KAAKL,KAAnE;AACA,wBACE,0CACGC,YAAY,iBACX,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEC,WAAhB;AAA6B,MAAA,MAAM,EAAEC,MAArC;AAA6C,MAAA,QAAQ,EAAE,KAAKO,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAIE;AAAK,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,EADf;AAEE,MAAA,aAAa,EAAET,MAFjB;AAGE,MAAA,gBAAgB,EAAE;AAChBU,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBADD;AAEhBC,QAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,UAAX;AAFK,OAHpB;AAOE,MAAA,kCAAkC,MAPpC;AAQE,MAAA,iBAAiB,EAAE,CAAC;AAAEZ,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAAD,KAAmB,KAAKF,YAAL,CAAkBC,GAAlB,EAAuBC,IAAvB,CARxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,CAACb,OAAO,CAACS,MAAD,CAAR,IACCA,MAAM,CAACG,GAAP,CAAYI,KAAD,iBACT,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACS,EADb;AAEE,MAAA,IAAI,EAAET,KAAK,CAACU,IAFd;AAGE,MAAA,GAAG,EAAEV,KAAK,CAACW,QAAN,CAAeC,QAAf,CAAwBC,GAAxB,EAHP;AAIE,MAAA,GAAG,EAAEb,KAAK,CAACW,QAAN,CAAeC,QAAf,CAAwBE,GAAxB,EAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAXJ,CADF,CAJF,CADF;AA6BD;;AAxD8C","sourcesContent":["import React, { Component } from 'react';\nimport isEmpty from 'lodash.isempty';\n\n// components:\nimport Marker from './Marker';\n\n// examples:\nimport GoogleMap from './GoogleMap';\nimport SearchBox from './SearchBox';\n\nexport default class Searchbar extends Component {\n  // constructor(props) {\n  //   super(props);\n\n  state = {\n    mapApiLoaded: false,\n    mapInstance: null,\n    mapApi: null,\n    places: [],\n    center: [35.6762, 139.6503],\n  };\n  // }\n\n  apiHasLoaded = (map, maps) => {\n    this.setState({\n      mapApiLoaded: true,\n      mapInstance: map,\n      mapApi: maps,\n    });\n  };\n\n  addPlace = (place) => {\n    this.setState({ places: place });\n  };\n\n  render() {\n    const { places, mapApiLoaded, mapInstance, mapApi, center } = this.state;\n    return (\n      <>\n        {mapApiLoaded && (\n          <SearchBox map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n        )}\n        <div style={{ height: '500px', width: '500px' }}>\n          <GoogleMap\n            defaultZoom={10}\n            defaultCenter={center}\n            bootstrapURLKeys={{\n              key: process.env.REACT_APP_GOOGLE_API,\n              libraries: ['places', 'geometry'],\n            }}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n          >\n            {!isEmpty(places) &&\n              places.map((place) => (\n                <Marker\n                  key={place.id}\n                  text={place.name}\n                  lat={place.geometry.location.lat()}\n                  lng={place.geometry.location.lng()}\n                />\n              ))}\n          </GoogleMap>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}