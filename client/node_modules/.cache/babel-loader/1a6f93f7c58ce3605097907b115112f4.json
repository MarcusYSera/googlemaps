{"ast":null,"code":"var _jsxFileName = \"/Users/Jeff/googlemaps/src/components/SearchBox.js\";\nimport React, { Component } from 'react';\nimport './searchBox.css';\n\nclass SearchBox extends Component {\n  constructor(props) {}\n\n  componentDidMount({\n    map,\n    mapApi\n  } = this.props) {\n    this.searchBox = new mapApi.places.SearchBox(this.searchInput);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n    this.searchBox.bindTo('bounds', map);\n  }\n\n  componentWillUnmount({\n    mapApi\n  } = this.props) {\n    mapApi.event.clearInstanceListeners(this.searchInput);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: ref => {\n        this.searchInput = ref;\n      },\n      type: \"text\",\n      onFocus: this.clearSearchBox,\n      placeholder: \"Enter a location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SearchBox;","map":{"version":3,"sources":["/Users/Jeff/googlemaps/src/components/SearchBox.js"],"names":["React","Component","SearchBox","constructor","props","componentDidMount","map","mapApi","searchBox","places","searchInput","addListener","onPlacesChanged","bindTo","componentWillUnmount","event","clearInstanceListeners","render","ref","clearSearchBox"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAO,CAEjB;;AAEDC,EAAAA,iBAAiB,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkB,KAAKH,KAAxB,EAA+B;AAC9C,SAAKI,SAAL,GAAiB,IAAID,MAAM,CAACE,MAAP,CAAcP,SAAlB,CAA4B,KAAKQ,WAAjC,CAAjB;AACA,SAAKF,SAAL,CAAeG,WAAf,CAA2B,gBAA3B,EAA6C,KAAKC,eAAlD;AACA,SAAKJ,SAAL,CAAeK,MAAf,CAAsB,QAAtB,EAAgCP,GAAhC;AACD;;AACDQ,EAAAA,oBAAoB,CAAC;AAAEP,IAAAA;AAAF,MAAa,KAAKH,KAAnB,EAA0B;AAC5CG,IAAAA,MAAM,CAACQ,KAAP,CAAaC,sBAAb,CAAoC,KAAKN,WAAzC;AACD;;AAqBDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAGC,GAAD,IAAS;AACZ,aAAKR,WAAL,GAAmBQ,GAAnB;AACD,OAHH;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,OAAO,EAAE,KAAKC,cALhB;AAME,MAAA,WAAW,EAAC,kBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AA9C+B;;AAiDlC,eAAejB,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './searchBox.css';\n\nclass SearchBox extends Component {\n  constructor(props){\n    \n  }\n\n  componentDidMount({ map, mapApi } = this.props) {\n    this.searchBox = new mapApi.places.SearchBox(this.searchInput);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n    this.searchBox.bindTo('bounds', map);\n  }\n  componentWillUnmount({ mapApi } = this.props) {\n    mapApi.event.clearInstanceListeners(this.searchInput);\n  }\n\n  onPlacesChanged = ({ map, addplace } = this.props) => {\n    const selected = this.searchBox.getPlaces();\n    const { 0: place } = selected;\n    if (!place.geometry) return;\n    if (place.geometry.viewport) {\n      map.fitBounds(place.geometry.viewport);\n    } else {\n      map.setCenter(place.geometry.location);\n      map.setZoom(17);\n    }\n\n    addplace(selected);\n    this.searchInput.blur();\n  };\n\n  clearSearchBox=()=> {\n    this.searchInput.value = '';\n  }\n\n  render() {\n    return (\n      <div className=\"searchBox\">\n        <input\n          ref={(ref) => {\n            this.searchInput = ref;\n          }}\n          type=\"text\"\n          onFocus={this.clearSearchBox}\n          placeholder=\"Enter a location\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n"]},"metadata":{},"sourceType":"module"}