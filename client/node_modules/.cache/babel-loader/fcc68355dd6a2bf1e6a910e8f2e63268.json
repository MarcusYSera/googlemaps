{"ast":null,"code":"var _jsxFileName = \"/Users/Jeff/googlemaps/src/components/SearchBar.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      placeholder: '',\n      onPlacesChanged: ''\n    };\n\n    this.onPlacesChanged = () => {\n      const {\n        onPlacesChanged\n      } = this.state;\n\n      if (onPlacesChanged) {\n        onPlacesChanged(this.searchBar.getPlaces());\n      }\n    };\n  }\n\n  componentDidMount() {\n    var input = ReactDOM.findDOMNode(this.refs.input);\n    this.searchBar = new google.maps.places.SearchBar(input);\n    this.searchBar.addListener('places_changed', this.onPlacesChanged);\n  }\n\n  componentWillUnmount() {\n    google.maps.event.clearInstanceListeners(this.searchBar);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: \"input\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/Jeff/googlemaps/src/components/SearchBar.js"],"names":["React","ReactDOM","SearchBar","Component","state","placeholder","onPlacesChanged","searchBar","getPlaces","componentDidMount","input","findDOMNode","refs","google","maps","places","addListener","componentWillUnmount","event","clearInstanceListeners","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,eAAe,EAAE;AAApC,KAD8B;;AAAA,SAYtCA,eAZsC,GAYpB,MAAM;AACtB,YAAM;AAAEA,QAAAA;AAAF,UAAsB,KAAKF,KAAjC;;AACA,UAAIE,eAAJ,EAAqB;AACnBA,QAAAA,eAAe,CAAC,KAAKC,SAAL,CAAeC,SAAf,EAAD,CAAf;AACD;AACF,KAjBqC;AAAA;;AAGtCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,KAAK,GAAGT,QAAQ,CAACU,WAAT,CAAqB,KAAKC,IAAL,CAAUF,KAA/B,CAAZ;AACA,SAAKH,SAAL,GAAiB,IAAIM,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmBb,SAAvB,CAAiCQ,KAAjC,CAAjB;AACA,SAAKH,SAAL,CAAeS,WAAf,CAA2B,gBAA3B,EAA6C,KAAKV,eAAlD;AACD;;AACDW,EAAAA,oBAAoB,GAAG;AACrBJ,IAAAA,MAAM,CAACC,IAAP,CAAYI,KAAZ,CAAkBC,sBAAlB,CAAyC,KAAKZ,SAA9C;AACD;;AASDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAC,OAAX;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAzBqC;;AA4BxC,eAAelB,SAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass SearchBar extends React.Component {\n  state = { placeholder: '', onPlacesChanged: '' };\n\n  componentDidMount() {\n    var input = ReactDOM.findDOMNode(this.refs.input);\n    this.searchBar = new google.maps.places.SearchBar(input);\n    this.searchBar.addListener('places_changed', this.onPlacesChanged);\n  }\n  componentWillUnmount() {\n    google.maps.event.clearInstanceListeners(this.searchBar);\n  }\n\n  onPlacesChanged = () => {\n    const { onPlacesChanged } = this.state;\n    if (onPlacesChanged) {\n      onPlacesChanged(this.searchBar.getPlaces());\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <input ref=\"input\" type=\"text\" />\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}