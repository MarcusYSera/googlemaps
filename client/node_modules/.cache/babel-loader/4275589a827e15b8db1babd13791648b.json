{"ast":null,"code":"var _jsxFileName = \"/Users/Jeff/googlemaps/src/components/App.js\";\nimport React, { Component } from 'react';\nimport isEmpty from 'lodash.isempty';\nimport GoogleMap from './GoogleMap';\nimport SearchBox from './SearchBox';\nimport Marker from './Marker';\nimport './global.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      places: [],\n      center: [35.6762, 139.6503]\n    };\n\n    this.apiHasLoaded = (map, maps) => {\n      this.setState({\n        mapApiLoaded: true,\n        mapInstance: map,\n        mapApi: maps\n      });\n    };\n\n    this.addPlace = place => {\n      console.log(`added ${JSON.stringify(place[0].geometry.location)}`);\n      console.log(`added ${JSON.stringify(place[0].geometry.location)}`);\n      this.setState({\n        places: place\n      });\n    };\n\n    this.onChildClickCallback = key => {\n      this.setState(state => {\n        const index = state.places.findIndex(e => e.id === key);\n        state.places[index].show = !state.places[index].show; // eslint-disable-line no-param-reassign\n\n        return {\n          places: state.places\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      places,\n      mapApiLoaded,\n      mapInstance,\n      mapApi,\n      center\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, mapApiLoaded && /*#__PURE__*/React.createElement(SearchBox, {\n      map: mapInstance,\n      mapApi: mapApi,\n      addplace: this.addPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"googleMap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: center,\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_GOOGLE_API,\n        libraries: ['places', 'geometry']\n      },\n      yesIWantToUseGoogleMapApiInternals: true,\n      onGoogleApiLoaded: ({\n        map,\n        maps\n      }) => this.apiHasLoaded(map, maps) // onChildClick={this.onChildClickCallback}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, !isEmpty(places) && places.map(place => /*#__PURE__*/React.createElement(Marker, {\n      key: place.id,\n      text: place.name,\n      lat: place.geometry.location.lat,\n      lng: place.geometry.location.lng,\n      place: place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Jeff/googlemaps/src/components/App.js"],"names":["React","Component","isEmpty","GoogleMap","SearchBox","Marker","App","state","mapApiLoaded","mapInstance","mapApi","places","center","apiHasLoaded","map","maps","setState","addPlace","place","console","log","JSON","stringify","geometry","location","onChildClickCallback","key","index","findIndex","e","id","show","render","process","env","REACT_APP_GOOGLE_API","libraries","name","lat","lng"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport isEmpty from 'lodash.isempty';\n\nimport GoogleMap from './GoogleMap';\nimport SearchBox from './SearchBox';\nimport Marker from './Marker';\n\nimport './global.css';\n\nexport default class App extends Component {\n  state = {\n    mapApiLoaded: false,\n    mapInstance: null,\n    mapApi: null,\n    places: [],\n    center: [35.6762, 139.6503],\n  };\n\n  apiHasLoaded = (map, maps) => {\n    this.setState({\n      mapApiLoaded: true,\n      mapInstance: map,\n      mapApi: maps,\n    });\n  };\n\n  addPlace = (place) => {\n    console.log(`added ${JSON.stringify(place[0].geometry.location)}`);\n    console.log(`added ${JSON.stringify(place[0].geometry.location)}`);\n    this.setState({ places: place });\n  };\n\n  onChildClickCallback = (key) => {\n    this.setState((state) => {\n      const index = state.places.findIndex((e) => e.id === key);\n      state.places[index].show = !state.places[index].show; // eslint-disable-line no-param-reassign\n      return { places: state.places };\n    });\n  };\n\n  render() {\n    const { places, mapApiLoaded, mapInstance, mapApi, center } = this.state;\n    return (\n      <>\n        {mapApiLoaded && (\n          <SearchBox map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\n        )}\n        <div className=\"googleMap\">\n          <GoogleMap\n            defaultZoom={10}\n            defaultCenter={center}\n            bootstrapURLKeys={{\n              key: process.env.REACT_APP_GOOGLE_API,\n              libraries: ['places', 'geometry'],\n            }}\n            yesIWantToUseGoogleMapApiInternals\n            onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\n            // onChildClick={this.onChildClickCallback}\n          >\n            {!isEmpty(places) &&\n              places.map((place) => (\n                <Marker\n                  key={place.id}\n                  text={place.name}\n                  lat={place.geometry.location.lat}\n                  lng={place.geometry.location.lng}\n                  place={place}\n                />\n              ))}\n          </GoogleMap>\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}