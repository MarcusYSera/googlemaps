{"ast":null,"code":"var _jsxFileName = \"/Users/Jeff/googlemaps/src/components/SearchBox.js\";\nimport React, { Component } from 'react'; // import styled from 'styled-components';\n\nimport './searchBox.css'; // const Wrapper = styled.div`\n//   position: relative;\n//   align-items: center;\n//   justify-content: center;\n//   width: 100%;\n//   padding: 20px;\n// `;\n\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onPlacesChanged = ({\n      map,\n      addplace\n    } = this.props) => {\n      const selected = this.searchBox.getPlaces();\n      const {\n        0: place\n      } = selected;\n      if (!place.geometry) return;\n\n      if (place.geometry.viewport) {\n        map.fitBounds(place.geometry.viewport);\n      } else {\n        map.setCenter(place.geometry.location);\n        map.setZoom(17);\n      }\n\n      addplace(selected);\n      this.searchInput.blur();\n    };\n\n    this.clearSearchBox = () => {\n      this.searchInput.value = '';\n    };\n\n    this.clearSearchBox = this.clearSearchBox.bind(this);\n  }\n\n  componentDidMount({\n    map,\n    mapApi\n  } = this.props) {\n    this.searchBox = new mapApi.places.SearchBox(this.searchInput);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n    this.searchBox.bindTo('bounds', map);\n  }\n\n  componentWillUnmount({\n    mapApi\n  } = this.props) {\n    mapApi.event.clearInstanceListeners(this.searchInput);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"searchBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: ref => {\n        this.searchInput = ref;\n      },\n      type: \"text\",\n      onFocus: this.clearSearchBox,\n      placeholder: \"Enter a location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default SearchBox;","map":{"version":3,"sources":["/Users/Jeff/googlemaps/src/components/SearchBox.js"],"names":["React","Component","SearchBox","constructor","props","onPlacesChanged","map","addplace","selected","searchBox","getPlaces","place","geometry","viewport","fitBounds","setCenter","location","setZoom","searchInput","blur","clearSearchBox","value","bind","componentDidMount","mapApi","places","addListener","bindTo","componentWillUnmount","event","clearInstanceListeners","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAEA,OAAO,iBAAP,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,eAfmB,GAeD,CAAC;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAoB,KAAKH,KAA1B,KAAoC;AACpD,YAAMI,QAAQ,GAAG,KAAKC,SAAL,CAAeC,SAAf,EAAjB;AACA,YAAM;AAAE,WAAGC;AAAL,UAAeH,QAArB;AACA,UAAI,CAACG,KAAK,CAACC,QAAX,EAAqB;;AACrB,UAAID,KAAK,CAACC,QAAN,CAAeC,QAAnB,EAA6B;AAC3BP,QAAAA,GAAG,CAACQ,SAAJ,CAAcH,KAAK,CAACC,QAAN,CAAeC,QAA7B;AACD,OAFD,MAEO;AACLP,QAAAA,GAAG,CAACS,SAAJ,CAAcJ,KAAK,CAACC,QAAN,CAAeI,QAA7B;AACAV,QAAAA,GAAG,CAACW,OAAJ,CAAY,EAAZ;AACD;;AAEDV,MAAAA,QAAQ,CAACC,QAAD,CAAR;AACA,WAAKU,WAAL,CAAiBC,IAAjB;AACD,KA5BkB;;AAAA,SA8BnBC,cA9BmB,GA8BF,MAAM;AACrB,WAAKF,WAAL,CAAiBG,KAAjB,GAAyB,EAAzB;AACD,KAhCkB;;AAEjB,SAAKD,cAAL,GAAsB,KAAKA,cAAL,CAAoBE,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,iBAAiB,CAAC;AAAEjB,IAAAA,GAAF;AAAOkB,IAAAA;AAAP,MAAkB,KAAKpB,KAAxB,EAA+B;AAC9C,SAAKK,SAAL,GAAiB,IAAIe,MAAM,CAACC,MAAP,CAAcvB,SAAlB,CAA4B,KAAKgB,WAAjC,CAAjB;AACA,SAAKT,SAAL,CAAeiB,WAAf,CAA2B,gBAA3B,EAA6C,KAAKrB,eAAlD;AACA,SAAKI,SAAL,CAAekB,MAAf,CAAsB,QAAtB,EAAgCrB,GAAhC;AACD;;AAEDsB,EAAAA,oBAAoB,CAAC;AAAEJ,IAAAA;AAAF,MAAa,KAAKpB,KAAnB,EAA0B;AAC5CoB,IAAAA,MAAM,CAACK,KAAP,CAAaC,sBAAb,CAAoC,KAAKZ,WAAzC;AACD;;AAqBDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAGC,GAAD,IAAS;AACZ,aAAKd,WAAL,GAAmBc,GAAnB;AACD,OAHH;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,OAAO,EAAE,KAAKZ,cALhB;AAME,MAAA,WAAW,EAAC,kBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AAhD+B;;AAmDlC,eAAelB,SAAf","sourcesContent":["import React, { Component } from 'react';\n// import styled from 'styled-components';\n\nimport './searchBox.css';\n// const Wrapper = styled.div`\n//   position: relative;\n//   align-items: center;\n//   justify-content: center;\n//   width: 100%;\n//   padding: 20px;\n// `;\n\nclass SearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.clearSearchBox = this.clearSearchBox.bind(this);\n  }\n\n  componentDidMount({ map, mapApi } = this.props) {\n    this.searchBox = new mapApi.places.SearchBox(this.searchInput);\n    this.searchBox.addListener('places_changed', this.onPlacesChanged);\n    this.searchBox.bindTo('bounds', map);\n  }\n\n  componentWillUnmount({ mapApi } = this.props) {\n    mapApi.event.clearInstanceListeners(this.searchInput);\n  }\n\n  onPlacesChanged = ({ map, addplace } = this.props) => {\n    const selected = this.searchBox.getPlaces();\n    const { 0: place } = selected;\n    if (!place.geometry) return;\n    if (place.geometry.viewport) {\n      map.fitBounds(place.geometry.viewport);\n    } else {\n      map.setCenter(place.geometry.location);\n      map.setZoom(17);\n    }\n\n    addplace(selected);\n    this.searchInput.blur();\n  };\n\n  clearSearchBox = () => {\n    this.searchInput.value = '';\n  };\n\n  render() {\n    return (\n      <div className=\"searchBox\">\n        <input\n          ref={(ref) => {\n            this.searchInput = ref;\n          }}\n          type=\"text\"\n          onFocus={this.clearSearchBox}\n          placeholder=\"Enter a location\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchBox;\n"]},"metadata":{},"sourceType":"module"}